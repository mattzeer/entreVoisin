@{

}
<h2>Inscription - Etape 1</h2>

<hr />

<div class="row">
    <div class="col-lg-12">
        <center><h1>Ou habitez vous ?</h1></center>
        <div class="row  col-lg-offset-2 col-lg-8">
            <p>A partir de cette adresse nous allons vérifier autour de vous les communautés déjà existante afin de vous faciliter la recherche. Vous pourrez toujours changer d'adresse après validation afin d'être le plus précis.</p>
        </div>
        <br />
        <div class="row  col-lg-offset-2 col-lg-8">
            <div id="locationField">
                <input id="autocomplete" placeholder="Entrez votre adresse" onfocus="geolocate()" type="text" class="form-control">
            </div>
        </div>
       
    </div>
</div>
<br />
<div class="row">
    <div class="col-lg-6 col-lg-offset-3">
        <button class="btn btn-primary form-control">Valider</button>
    </div>
</div>


<script>
    // This example displays an address form, using the autocomplete feature
    // of the Google Places API to help users fill in the information.

    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        postal_code: 'short_name'
    };


    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            (document.getElementById('autocomplete')),
            { types: ['geocode'] });

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    // [START region_fillform]
    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        document.getElementById('lat').value = place.geometry.location.lat();
        document.getElementById('long').value = place.geometry.location.lng();

        for (var component in componentForm) {
            document.getElementById(component).value = '';
        }

        // Get each component of the address from the place details
        // and fill the corresponding field on the form.


        for (var i = 0; i < place.address_components.length; i++) {

            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                document.getElementById(addressType).value = val;
            }
        }

        document.getElementById('lat').value = lol;
    }
    // [END region_fillform]

    // [START region_geolocation]
    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                document.getElementById(component).value = lat
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
    // [END region_geolocation]

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBffhZW6yoemiJGFZfT4joalGZQbR89kxs&signed_in=true&libraries=places&callback=initAutocomplete" async defer></script>